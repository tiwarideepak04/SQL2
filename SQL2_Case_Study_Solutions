-- section A--
# 1.	Read the data from all tables.
select * from customer;
select * from Orders;
select * from Supplier;
select * from Product ;
select * from OrderItem;

# 2.	Find the country wise count of customers.
select count(Id) total_customers,country from customer group by country order by total_customers desc;
select * from customer where country='USA';

# 3.	Display the products which are not discontinued
select id,productname from product where IsDiscontinued = 1;

# 4.	Display the list of companies along with the product name that they are supplying.
select distinct companyname,productname from supplier s join product p on s.id=p.Id;

# 5.	Display customer's information who stays in 'Mexico'
select * from customer where country like '%mexico%';

# 6.	Display the costliest item that is ordered by the customer.
select max(p.unitprice),p.ProductName from product p join orderitem ot on p.id=ot.ProductId group by p.productname order by max(p.UnitPrice) desc limit 1;
select productname,max(unitprice) from product group by productname order by max(unitprice) desc;

# 7.	Display supplier id who owns highest number of products.
select count(s.id),s.id from supplier s join product p on s.id=p.SupplierId group by s.id order by count(s.id) desc ;
select count(p.supplierid),s.id from product p join supplier s on p.SupplierId=s.id group by s.id order by count(p.SupplierId) desc limit 2;

# 8.	Display month wise and year wise count of the orders placed
select count(id) total_orders,year(orderdate) from orders group by year(orderdate);
select count(id) total_orders,month(orderdate) from orders group by month(orderdate);

# 9.	Which country has maximum suppliers.
select count(id) total_Suppliers , country from supplier group by country order by count(id) desc limit 1;

#10.	Which customers did not place any order.
select * from customer c left join orders o on  c.id = o.CustomerId where o.CustomerId is null;

-- section B--
# 1.	Arrange the product id, product name based on high demand by the customer.
select * from product;
select count(o.productid) ordered_count,p.id,p.productname from product p join orderitem o on p.id=o.ProductId group by p.id,p.productname order by count(o.ProductId) desc;

# 2.	Display the number of orders delivered every year.
select distinct count(orders.id),year(orderdate) from orders join customer on orders.CustomerId=customer.id group by year(orderdate) ;

# 3.	Calculate year-wise total revenue.
select year(orderdate) as "year",sum(totalamount) as revenue from orders group by year(orderdate); 
select year(orders.orderdate) as "year",sum(unitprice*quantity) as "revenue" from orderitem join orders on orders.id=orderitem.orderid group by year(orders.orderdate) ;

# 4.	Display the customer details whose order amount is maximum including his past orders.
select FirstName, LastName ,customerId, sum(TotalAmount) 
from customer c join orders o on c.id= o.customerId
group by customerId order by sum(TotalAmount) desc limit 1;

# 5 Display products which were sold out with minimum quantity. 
 SELECT ProductName
  FROM Product
 WHERE Id = ANY
       (SELECT ProductId 
          FROM OrderItem 
         WHERE Quantity = 1);

# 6.A sales and marketing department of this company wants to find out how frequently customer have business with them. This can be done in two ways 
#1. Find out details of the customers along with the current and previous order dates. 
SELECT firstname, lastname, orderDate,
LAG(orderDate,1) OVER (PARTITION BY c.Id ORDER BY orderDate ) Prev_OrderDate
FROM orders o
JOIN customer c
on o.customerId=c.Id;

# 7.  Find out details of the customers along with the latest and previous order amount
 SELECT firstname, lastname, TotalAmount,
LAG(totalamount,1) OVER (PARTITION BY c.Id ORDER BY orderDate ) Prev_OrderAmount
FROM orders o
JOIN customer c
on o.customerId=c.Id;

# 8.Find out top 3 suppliers in term of revenue generated by the products they are supplying.
select SupplierId , sum(product_sales) as supplier_sales from ( Select productid, sum(oi.unitprice * quantity) as product_sales, p.SupplierId
from orderitem oi join product p on  oi.productid = p.id group by productid) A5 group by supplierId order by  supplier_sales desc limit 3;

# 9.	Display latest order date (should not be same as first order date) of all the customers with customer details.
select c.Id, FirstName,LastName ,TotalAmount,OrderDate,max(OrderDate) as last_date
from customer c join orders o on c.id=o.customerid group by CustomerId having last_date <> o.OrderDate;

#10.	Display the product name and supplier name for each order
select o.OrderId, p.ProductName, s.CompanyName from orderitem o join product p on o.productId = p.Id join supplier s on p.SupplierId = s.Id order by o.OrderId;

## section c 
# 1.	Fetch the records to display the customer details who ordered more than 10 products in the single order
SELECT c.id, 
CONCAT(firstname, ' ', lastname) AS name, SUM(oi.quantity) AS tot_qty
FROM customer c INNER JOIN orders o
	ON c.id = o.id
    INNER JOIN orderitem oi
	ON o.id = oi.id
GROUP BY c.id,name, o.id
HAVING tot_qty > 10;

# 3.	Display the compan(y)ies which supplies products whose cost is above 100.
SELECT CompanyName
  FROM Supplier
 WHERE EXISTS
       (SELECT ProductName
          FROM Product
         WHERE SupplierId = Supplier.Id 
           AND UnitPrice > 100)	;

# 4.Create a combined list to display customers and supplier list as per the below format.
SELECT 'Customer' As Type, 
       concat(FirstName ,' ' , LastName) AS ContactName, 
       City, Country, Phone
  FROM Customer
UNION
SELECT 'Supplier', 
       ContactName, City, Country, Phone
  FROM Supplier;

# 5. Display the customer list who belongs to same city and country arrange in country wise.
SELECT B.FirstName AS FirstName1, B.LastName AS LastName1, 
       A.FirstName AS FirstName2, A.LastName AS LastName2, 
       B.City, B.Country
  FROM Customer A, Customer B
 WHERE A.Id <> B.Id
   AND A.City = B.City 
   AND A.Country = B.Country
 ORDER BY A.Country;
 
## section d
 # 1.	Company sells the product at different discounted rates. Refer actual product price in product table and selling price in the order item table. Write a query to 
 # find out total amount saved in each order then display the orders from highest to lowest amount saved
with A5 as (select orderId, productId, oi.unitprice * oi.quantity as actual_amount, 
p.unitprice * oi.quantity as total_amount  
from orderitem oi join product p on  oi.productid = p.id) 
select *, sum(total_amount - actual_amount) as saved_amount from A5 group by orderId order by saved_amount desc;

#2. 2.	Mr. Kavin want to become a supplier. He got the database of "Richard's Supply" for reference. Help him to pick: 
# a. List few products that he should choose based on demand.
# b. Who will be the competitors for him for the products suggested in above questions.
select s.CompanyName, p1.ProductName  from supplier s join (select ProductId, SupplierId, ProductName from Product p join
 (select * from OrderItem group by ProductId order by count(id) desc limit 5) o on o.ProductId =  p.Id) p1  
on s.Id = p1.SupplierId;

# 3.	Create a combined list to display customers and suppliers details considering the following criteria 
# Both customer and supplier belong to the same country
# Customer who does not have supplier in their country
# Supplier who does not have customer in their country
SELECT C.FirstName, C.LastName, C.Country AS CustomerCountry, 
S.Country AS SupplierCountry, S.CompanyName
FROM Customer C LEFT JOIN Supplier S 
ON C.Country = S.Country
UNION
SELECT C.FirstName, C.LastName, C.Country AS CustomerCountry, 
S.Country AS SupplierCountry, S.CompanyName
FROM Customer C RIGHT JOIN Supplier S 
ON C.Country = S.Country;

# 4. Every supplier supplies specific products to the customers. Create a view of suppliers and total sales made by their products and write a query on this view 
# to find out top 2 suppliers (using windows function RANK() in each country by total sales done by the products.
# 1. Create View
create view total_sales_supplier as 
select SupplierId, country, sum(product_sales) as supplier_sales from (Select productid, sum(oi.unitprice * quantity) as product_sales, p.SupplierId, s.Country
from orderitem oi join product p on  oi.productid = p.id 
join supplier s on p.SupplierId = s.id group by productid )A1 group by supplierid;

#2. select all the records from that view
Select * from total_sales_supplier;


# 3. top 2 suppliers
Select * from (select SupplierId, country,supplier_sales,
rank() over(partition by country order by supplier_sales desc) as rank_no 
from total_sales_supplier)A2 where rank_no <=2;

# 5. Find out for which products, UK is dependent on other countries for the supply. List the countries which are supplying these products in the same list.
SELECT c.id, CONCAT(firstname, ' ', lastname) AS name,
orderid, p.productname, IFNULL(quantity,0) AS prod_qty, 
IFNULL(quantity * p.unitprice, 0) AS subtotal
FROM 
customer c LEFT JOIN orders o
        ON c.id = o.id
LEFT JOIN orderitem oi
        ON o.id = oi.id
LEFT JOIN product p
        ON oi.id = p.id
ORDER BY c.id, o.id, p.productname;



